{"version":3,"file":"static/js/Movies.5388acbc.chunk.js","mappings":"uQAAA,IAAMA,EAAU,mCACHC,EAAW,WACtB,OAAOC,MAAM,yDAAD,OAC+CF,IACzDG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EACYC,EAAa,SAAAC,GACxB,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,oBAC0CX,EAD1C,oBAEVG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EAEYG,EAAkB,SAAAD,GAC7B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACkDX,EADlD,oBAEVG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EACYI,EAAkB,SAAAF,GAC7B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACkDX,EADlD,2BAEVG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EACYK,EAAkB,SAAAC,GAC7B,OAAOb,MAAM,qDAAD,OAC2CF,EAD3C,iCAC2Ee,EAD3E,gCAEVZ,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,C,qDC5BD,IArBiB,SAAC,GAAmB,IAAjBO,EAAgB,EAAhBA,UACZC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,wBACGD,EAAUK,KAAI,SAAAC,GACb,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGX,IAAMa,MAAOP,EAArC,SACGK,EAAGG,gBAAkBH,EAAGI,QAFpBJ,EAAGX,GAMf,KAGN,C,kHC2BD,UAxCe,WACb,OAAsCgB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMpB,EAAQkB,EAAaG,IAAI,SAC3BrB,GACFsB,EAAkBtB,EAErB,GAAE,CAACkB,IAVe,SAuBJI,EAvBI,0EAuBnB,WAAiCtB,GAAjC,kFACQD,EAAAA,EAAAA,IAAgBC,GACnBZ,MAAK,SAAAmC,GAAI,OAAIP,EAAeO,EAAKC,QAAxB,IACTC,OAAM,SAAAC,GAAK,OAAItB,QAAQC,IAAIqB,EAAhB,IAHhB,4CAvBmB,sBA6BnB,OACE,iCACE,kBAAMC,SAdW,SAAAC,GACnBA,EAAIC,iBACJV,EAAgB,CAAEnB,MAAOa,IACzBS,EAAkBT,EACnB,EAUG,WACE,kBAAOiB,KAAK,OAAOC,MAAOlB,EAAamB,SApBvB,SAAAJ,GACpB,IAAMG,EAAQH,EAAIK,OAAOF,MAEzBjB,EAAeiB,EAChB,KAiBK,mBAAQD,KAAK,SAAb,uBAEDf,EAAYmB,OAAS,IAAK,SAAC,IAAD,CAAUjC,UAAWc,MAGrD,C","sources":["Api/movieApi.js","components/FilmList/FilmList.jsx","pages/Movies.jsx"],"sourcesContent":["const API_KEY = 'df75de766bc216630e148042dff14934';\nexport const movieApi = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieIdApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\n\nexport const movieCreditsApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieReviewsApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieSearchsApi = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nconst FilmList = ({ filmArray }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <ul>\n      {filmArray.map(el => {\n        return (\n          <li key={el.id}>\n            <Link to={`/movies/${el.id}`} state={location}>\n              {el.original_title || el.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  filmArray: propTypes.array.isRequired,\n};\nexport default FilmList;\n","import { useState } from 'react';\nimport { movieSearchsApi } from 'Api/movieApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport FilmList from 'components/FilmList/FilmList';\nconst Movies = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      filmSearchRequest(query);\n    }\n  }, [searchParams]);\n\n  const onInputChange = evt => {\n    const value = evt.target.value;\n\n    setSearchInput(value);\n  };\n  const onSubmitForm = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: searchInput });\n    filmSearchRequest(searchInput);\n  };\n\n  async function filmSearchRequest(query) {\n    await movieSearchsApi(query)\n      .then(data => setSearchFilms(data.results))\n      .catch(error => console.log(error));\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmitForm}>\n        <input type=\"text\" value={searchInput} onChange={onInputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchFilms.length > 0 && <FilmList filmArray={searchFilms} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","movieApi","fetch","then","response","ok","json","Promise","reject","Error","movieIdApi","id","movieCreditsApi","movieReviewsApi","movieSearchsApi","query","filmArray","location","useLocation","console","log","map","el","to","state","original_title","name","useState","searchInput","setSearchInput","searchFilms","setSearchFilms","useSearchParams","searchParams","setSearchParams","useEffect","get","filmSearchRequest","data","results","catch","error","onSubmit","evt","preventDefault","type","value","onChange","target","length"],"sourceRoot":""}