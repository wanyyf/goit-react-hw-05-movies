{"version":3,"file":"static/js/MovieDetails.5b300c06.chunk.js","mappings":"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","sources":["Api/movieApi.js","webpack://react-homework-template/./src/pages/MovieDetails/movieDetails.module.css?c148","components/MoreInfo/MoreInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const API_KEY = 'df75de766bc216630e148042dff14934';\nexport const movieApi = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieIdApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\n\nexport const movieCreditsApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieReviewsApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieSearchsApi = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"movieDetails_info__w8a5S\",\"infoAbout\":\"movieDetails_infoAbout__MQ1-B\",\"title\":\"movieDetails_title__SN6Ns\",\"buttonBack\":\"movieDetails_buttonBack__3WwxO\"};","import { Link } from 'react-router-dom';\n\nconst MoreInfo = ({ movieId, locationState }) => {\n  return (\n    <ul>\n      <li>\n        <Link to={`/movies/${movieId}/cast`} state={locationState}>\n          Cast\n        </Link>\n      </li>\n      <li>\n        <Link to={`/movies/${movieId}/reviews`} state={locationState}>\n          Reviews\n        </Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default MoreInfo;\n","import { useLocation, useParams } from 'react-router-dom';\nimport { movieIdApi } from 'Api/movieApi';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport s from './movieDetails.module.css';\nimport MoreInfo from 'components/MoreInfo/MoreInfo';\n\nconst MovieDetails = () => {\n  const [filmInfo, setFilmInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function FilmInfoRequest() {\n      await movieIdApi(movieId)\n        .then(data => setFilmInfo(data))\n        .catch(error => {\n          setFilmInfo([]);\n          console.log(error);\n        });\n    }\n    FilmInfoRequest();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    name,\n    genres,\n    release_date = '',\n    vote_average,\n    tagline,\n  } = filmInfo;\n  const imgSrc = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const releaseYear = release_date.split('').splice(0, 4).join('');\n  const vote = vote_average * 10;\n\n  return (\n    <>\n      <Link to={location.state ?? '/'}>\n        <button className={s.buttonBack}>Go back</button>\n      </Link>\n      {filmInfo.length === 0 ? (\n        <h2> We have no info about this film </h2>\n      ) : (\n        <>\n          <div className={s.info}>\n            <img src={imgSrc} alt={original_title} />\n            <div className={s.infoAbout}>\n              <h2 className={s.title}>\n                {original_title || name} ({releaseYear})\n              </h2>\n              <h3>User score:</h3> <span>{vote.toFixed(0)}%</span>\n              {tagline && (\n                <>\n                  <h3>Overview</h3>\n                  <p>{tagline}</p>\n                </>\n              )}\n              <h3>Genges</h3>\n              <ul>\n                {genres &&\n                  genres.map(el => {\n                    return <li key={el.id}>{el.name}</li>;\n                  })}\n              </ul>\n            </div>\n          </div>\n          <h4>Additional information</h4>\n          <MoreInfo movieId={movieId} locationState={location.state} />\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","movieApi","fetch","then","response","ok","json","Promise","reject","Error","movieIdApi","id","movieCreditsApi","movieReviewsApi","movieSearchsApi","query","movieId","locationState","to","state","useState","filmInfo","setFilmInfo","useParams","location","useLocation","useEffect","data","catch","error","console","log","FilmInfoRequest","poster_path","original_title","name","genres","release_date","vote_average","tagline","imgSrc","releaseYear","split","splice","join","vote","className","s","length","src","alt","toFixed","map","el"],"sourceRoot":""}