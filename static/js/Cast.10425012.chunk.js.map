{"version":3,"file":"static/js/Cast.10425012.chunk.js","mappings":"uQAAA,IAAMA,EAAU,mCACHC,EAAW,WACtB,OAAOC,MAAM,yDAAD,OAC+CF,IACzDG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EACYC,EAAa,SAAAC,GACxB,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,oBAC0CX,EAD1C,oBAEVG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EAEYG,EAAkB,SAAAD,GAC7B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACkDX,EADlD,oBAEVG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EACYI,EAAkB,SAAAF,GAC7B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACkDX,EADlD,2BAEVG,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,EACYK,EAAkB,SAAAC,GAC7B,OAAOb,MAAM,qDAAD,OAC2CF,EAD3C,iCAC2Ee,EAD3E,gCAEVZ,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,aACvB,GACF,C,yGCdD,UAjCa,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+FACQT,EAAAA,EAAAA,IAAgBI,GACnBb,MAAK,SAAAmB,GAAI,OAAIF,EAASE,EAAKC,KAAlB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAHhB,4CADc,uBAAC,WAAD,wBAMdG,EACD,GAAE,CAACZ,KAGF,wBACGG,GACCA,EAAMU,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IAAG,0CAAqCD,EAAGE,cAC3CC,IAAKH,EAAGI,KACRC,MAAM,SAER,oCAAYL,EAAGI,SACf,wCAAgBJ,EAAGM,eAPZN,EAAGnB,GAUf,KAGR,C","sources":["Api/movieApi.js","components/Cast/Cast.jsx"],"sourcesContent":["const API_KEY = 'df75de766bc216630e148042dff14934';\nexport const movieApi = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieIdApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\n\nexport const movieCreditsApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieReviewsApi = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\nexport const movieSearchsApi = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`!!Error!!`));\n  });\n};\n","import { useParams } from 'react-router';\nimport { movieCreditsApi } from 'Api/movieApi';\nimport { useEffect, useState } from 'react';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setcasts] = useState([]);\n\n  useEffect(() => {\n    async function castsRequest() {\n      await movieCreditsApi(movieId)\n        .then(data => setcasts(data.cast))\n        .catch(error => console.log(error));\n    }\n    castsRequest();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {casts &&\n        casts.map(el => {\n          return (\n            <li key={el.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${el.profile_path}`}\n                alt={el.name}\n                width=\"250\"\n              />\n              <h3> Name: {el.name}</h3>\n              <h4>Character: {el.character}</h4>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","movieApi","fetch","then","response","ok","json","Promise","reject","Error","movieIdApi","id","movieCreditsApi","movieReviewsApi","movieSearchsApi","query","movieId","useParams","useState","casts","setcasts","useEffect","data","cast","catch","error","console","log","castsRequest","map","el","src","profile_path","alt","name","width","character"],"sourceRoot":""}